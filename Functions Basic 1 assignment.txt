#1
def a():
    return 5
print(a())
Answer: 5

#2
def a():
    return 5
print(a()+a())
Answer: 10

#3
def a():
    return 5
    return 10
print(a())
Answer: 5

#4
def a():
    return 5
    print(10)
print(a())
Answer: 5

#5
def a():
    print(5)
x = a()
print(x)
Answer: 5 none

#6
def a(b,c):
    print(b+c)
print(a(1,2) + a(2,3))
Answer: will print 3 5 and give error because does not recogize the 
operand + (not a math function here).

#7
def a(b,c):
    return str(b)+str(c)
print(a(2,5))
Answer: 25 (treated as a string)

#8
def a():
    b = 100
    print(b)
    if b < 10:
        return 5
    else:
	return 10
    return 7
print(a())
Answer: 100 10

#9
def a(b,c):
    if b<c:
        return 7
    else:
        return 14
    return 3
print(a(2,3))
print(a(5,3))
print(a(2,3) + a(5,3))

Answer: 7 14 21  each print function creates a value and the last
                 print function created 2 return values (7&14) and
                 added them together for 21.

#10
def a(b,c):
    return b+c
    return 10
print(a(3,5))
Answer: 8

#11
b = 500
print(b)
def a():
    b = 300
    print(b)
print(b)
a()
print(b)
Answer:500 500 300 500  performs an outer and inner function.

#12
b = 500
print(b)
def a():
    b = 300
    print(b)
    return b
print(b)
a()
print(b)
Answer: 500 500 300 500 (never does anything with the return value of b).

#13
b = 500
print(b)
def a():
    b = 300
    print(b)
    return b
print(b)
b=a()
print(b)
Answer: 500 500 300 300  (this time prints the return value of b = 300)

#14
def a():
    print(1)
    b()
    print(2)
def b():
    print(3)
a()
Answer: 1 3 2  (tricky jumping around functions)

#15
def a():
    print(1)
    x = b()
    print(x)
    return 10
def b():
    print(3)
    return 5
y = a()
print(y)
Answer: 1 3 5 10  (getting the hang of it).